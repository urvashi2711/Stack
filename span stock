The stock span problem is a financial problem where we have a series of N daily price quotes for a stock and we need to calculate span of stockâ€™s price for all N days. You are given an array of length N, where ith element of array denotes the price of a stock on ith. Find the span of stock's price on ith day, for every 1<=i<=N.
A span of a stock's price on a given day, i, is the maximum number of consecutive days before the (i+1)th day, for which stock's price on these days is less than or equal to that on the ith day.

Input Format
First line contains integer N denoting size of the array.
Next line contains N space separated integers denoting the elements of the array.

Constraints
1 <= N <= 10^6

Output Format
Display the array containing stock span values.

Sample Input
5
30
35
40
38
35
Sample Output
1 2 3 1 1 END
Explanation
For the given case
for day1 stock span =1
for day2 stock span =2 (as 35>30 so both days are included in it)
for day3 stock span =3 (as 40>35 so 2+1=3)
for day4 stock span =1 (as 38<40 so only that day is included)
for day5 stock span =1 (as 35<38 so only that day is included)
hence output is 1 2 3 1 1 END
//

import java.util.*;
public class Main {

	public static void main(String args[])  {
		// Your Code Here
		Scanner sceu83 = new Scanner(System.in);
		int n9094 = sceu83.nextInt();
		int[] arr6383 = new int[n9094];
		for(int i893 = 0 ; i893 < n9094 ; i893++)
		arr6383[i893]=sceu83.nextInt();
		int[] deco9403 = new int[n9094];
		calcspan8993(arr6383,n9094,deco9403);
		for(int i893 = 0 ; i893 < n9094 ; i893++)
		System.out.print(deco9403[i893]+" ");
		System.out.print("END");
		

	}
	static void calcspan8993(int price9503[], int n9094, int s9302[])
    {
        s9302[0] = 1;
        for (int i893 = 1; i893 < n9094; i893++) {
            s9302[i893] = 1; 
            for (int j9303 = i893 - 1; (j9303 >= 0) && (price9503[i893] >= price9503[j9303]); j9303--)
                s9302[i893]++;
        }
    }

}
